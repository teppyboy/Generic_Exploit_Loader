using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using SirhurtU.Controls;

namespace SirhurtUI.Controls
{
	// Token: 0x0200005C RID: 92
	public class TabControlX : UserControl
	{
		// Token: 0x06000096 RID: 150 RVA: 0x00010798 File Offset: 0x00010798
		public TabControlX()
		{
			this.InitializeComponent();
		}

		// Token: 0x06000097 RID: 151 RVA: 0x00010890 File Offset: 0x00010890
		private void setHeight()
		{
			if (!this.buttonlist.Any<ButtonX>())
			{
				this.BackTopPanel.Height = this.tab_size.Height;
				this.TabButtonPanel.Height = this.tab_size.Height;
				this.RibbonPanel.Height = 2;
				return;
			}
			this.BackTopPanel.Height = this.buttonlist[0].Height;
			this.TabButtonPanel.Height = this.buttonlist[0].Height;
			this.RibbonPanel.Height = 2;
		}

		// Token: 0x17000020 RID: 32
		// (get) Token: 0x06000098 RID: 152 RVA: 0x00010927 File Offset: 0x00010927
		// (set) Token: 0x06000099 RID: 153 RVA: 0x0001092F File Offset: 0x0001092F
		public Size TabSize
		{
			get
			{
				return this.tab_size;
			}
			set
			{
				this.tab_size = value;
				this.setHeight();
				base.Invalidate();
			}
		}

		// Token: 0x17000021 RID: 33
		// (get) Token: 0x0600009A RID: 154 RVA: 0x00010944 File Offset: 0x00010944
		// (set) Token: 0x0600009B RID: 155 RVA: 0x0001094C File Offset: 0x0001094C
		public Color SelTabForeColor
		{
			get
			{
				return this.sel_tab_forecolor;
			}
			set
			{
				this.sel_tab_forecolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000022 RID: 34
		// (get) Token: 0x0600009C RID: 156 RVA: 0x0001095B File Offset: 0x0001095B
		// (set) Token: 0x0600009D RID: 157 RVA: 0x00010963 File Offset: 0x00010963
		public Color UnSelTabForeColor
		{
			get
			{
				return this.unsel_tab_forecolor;
			}
			set
			{
				this.unsel_tab_forecolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000023 RID: 35
		// (get) Token: 0x0600009E RID: 158 RVA: 0x00010972 File Offset: 0x00010972
		// (set) Token: 0x0600009F RID: 159 RVA: 0x0001097A File Offset: 0x0001097A
		public Color SelTabBackColor
		{
			get
			{
				return this.sel_tab_backcolor;
			}
			set
			{
				this.sel_tab_backcolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000024 RID: 36
		// (get) Token: 0x060000A0 RID: 160 RVA: 0x00010989 File Offset: 0x00010989
		// (set) Token: 0x060000A1 RID: 161 RVA: 0x00010991 File Offset: 0x00010991
		public Color UnSelTabBackColor
		{
			get
			{
				return this.un_sel_tab_backcolor;
			}
			set
			{
				this.un_sel_tab_backcolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000025 RID: 37
		// (get) Token: 0x060000A2 RID: 162 RVA: 0x000109A0 File Offset: 0x000109A0
		// (set) Token: 0x060000A3 RID: 163 RVA: 0x000109A8 File Offset: 0x000109A8
		public Color MouseHrTabColor
		{
			get
			{
				return this.tab_mouseHvrColor;
			}
			set
			{
				this.tab_mouseHvrColor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000026 RID: 38
		// (get) Token: 0x060000A4 RID: 164 RVA: 0x000109B7 File Offset: 0x000109B7
		// (set) Token: 0x060000A5 RID: 165 RVA: 0x000109BF File Offset: 0x000109BF
		public Color MouseClkTabColor
		{
			get
			{
				return this.tab_mouseClkColor;
			}
			set
			{
				this.tab_mouseClkColor = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000027 RID: 39
		// (get) Token: 0x060000A6 RID: 166 RVA: 0x000109CE File Offset: 0x000109CE
		// (set) Token: 0x060000A7 RID: 167 RVA: 0x000109D6 File Offset: 0x000109D6
		public int X_TextLoc
		{
			get
			{
				return this.txt_x_loc;
			}
			set
			{
				this.txt_x_loc = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000028 RID: 40
		// (get) Token: 0x060000A8 RID: 168 RVA: 0x000109E5 File Offset: 0x000109E5
		// (set) Token: 0x060000A9 RID: 169 RVA: 0x000109ED File Offset: 0x000109ED
		public int Y_TextLoc
		{
			get
			{
				return this.txt_y_loc;
			}
			set
			{
				this.txt_y_loc = value;
				base.Invalidate();
			}
		}

		// Token: 0x17000029 RID: 41
		// (get) Token: 0x060000AA RID: 170 RVA: 0x000109FC File Offset: 0x000109FC
		// (set) Token: 0x060000AB RID: 171 RVA: 0x00010A04 File Offset: 0x00010A04
		public Color RibbonColor
		{
			get
			{
				return this.ribbon_Color;
			}
			set
			{
				this.RibbonPanel.BackColor = value;
				this.ribbon_Color = value;
				base.Invalidate();
			}
		}

		// Token: 0x1700002A RID: 42
		// (get) Token: 0x060000AC RID: 172 RVA: 0x00010A1F File Offset: 0x00010A1F
		// (set) Token: 0x060000AD RID: 173 RVA: 0x00010A27 File Offset: 0x00010A27
		public Color CtrlPanelColor
		{
			get
			{
				return this.tabCtrlPanel_backcolor;
			}
			set
			{
				this.TabPanel.BackColor = value;
				this.tabCtrlPanel_backcolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x1700002B RID: 43
		// (get) Token: 0x060000AE RID: 174 RVA: 0x00010A42 File Offset: 0x00010A42
		// (set) Token: 0x060000AF RID: 175 RVA: 0x00010A4A File Offset: 0x00010A4A
		public Color TabPanelColor
		{
			get
			{
				return this.tabCtrlButPanel_backcolor;
			}
			set
			{
				this.BackTopPanel.BackColor = value;
				this.TabButtonPanel.BackColor = value;
				this.tabCtrlButPanel_backcolor = value;
				base.Invalidate();
			}
		}

		// Token: 0x060000B0 RID: 176 RVA: 0x00010A71 File Offset: 0x00010A71
		public int SelectedTabIndex()
		{
			return this.selected_index;
		}

		// Token: 0x060000B1 RID: 177 RVA: 0x00010A79 File Offset: 0x00010A79
		public int TabCount()
		{
			return this.buttonlist.Count;
		}

		// Token: 0x060000B2 RID: 178 RVA: 0x00010A86 File Offset: 0x00010A86
		public void ChangeTabText(string newtext, int index)
		{
			this.buttonlist[index].Text = newtext;
		}

		// Token: 0x060000B3 RID: 179 RVA: 0x00010A9C File Offset: 0x00010A9C
		private void createAndAddButton(string tabtext, TabPanelControl tpcontrol, Point loc)
		{
			ButtonX buttonX = new ButtonX();
			buttonX.DisplayText = tabtext;
			buttonX.Text = tabtext;
			buttonX.Size = this.tab_size;
			buttonX.Location = loc;
			buttonX.ForeColor = this.sel_tab_forecolor;
			buttonX.BXBackColor = this.sel_tab_backcolor;
			buttonX.MouseHoverColor = this.sel_tab_backcolor;
			buttonX.MouseClickColor1 = this.sel_tab_backcolor;
			buttonX.ChangeColorMouseHC = false;
			buttonX.TextLocation_X = this.txt_x_loc;
			buttonX.TextLocation_Y = this.txt_y_loc;
			buttonX.Font = this.Font;
			buttonX.Click += this.button_Click;
			this.TabButtonPanel.Controls.Add(buttonX);
			this.buttonlist.Add(buttonX);
			this.selected_index++;
			this.tabPanelCtrlList.Add(tpcontrol);
			this.TabPanel.Controls.Clear();
			this.TabPanel.Controls.Add(tpcontrol);
			this.UpdateButtons();
		}

		// Token: 0x060000B4 RID: 180 RVA: 0x00010B9C File Offset: 0x00010B9C
		private void button_Click(object sender, EventArgs e)
		{
			string text = ((ButtonX)sender).Text;
			int index = 0;
			for (int i = 0; i < this.buttonlist.Count; i++)
			{
				if (this.buttonlist[i].Text == text)
				{
					index = i;
				}
			}
			this.TabPanel.Controls.Clear();
			this.TabPanel.Controls.Add(this.tabPanelCtrlList[index]);
			this.selected_index = ((ButtonX)sender).TabIndex;
			this.UpdateButtons();
		}

		// Token: 0x060000B5 RID: 181 RVA: 0x00010C2C File Offset: 0x00010C2C
		public void AddTab(string tabtext, TabPanelControl tpcontrol)
		{
			if (!this.buttonlist.Any<ButtonX>())
			{
				this.createAndAddButton(tabtext, tpcontrol, new Point(0, 0));
				return;
			}
			this.createAndAddButton(tabtext, tpcontrol, new Point(this.buttonlist[this.buttonlist.Count - 1].Size.Width + this.buttonlist[this.buttonlist.Count - 1].Location.X, 0));
		}

		// Token: 0x060000B6 RID: 182 RVA: 0x00010CB0 File Offset: 0x00010CB0
		private void UpdateButtons()
		{
			if (this.buttonlist.Count > 0)
			{
				for (int i = 0; i < this.buttonlist.Count; i++)
				{
					if (i == this.selected_index)
					{
						this.buttonlist[i].ChangeColorMouseHC = false;
						this.buttonlist[i].BXBackColor = this.sel_tab_backcolor;
						this.buttonlist[i].ForeColor = this.sel_tab_forecolor;
						this.buttonlist[i].MouseHoverColor = this.sel_tab_backcolor;
						this.buttonlist[i].MouseClickColor1 = this.sel_tab_backcolor;
					}
					else
					{
						this.buttonlist[i].ChangeColorMouseHC = true;
						this.buttonlist[i].ForeColor = this.unsel_tab_forecolor;
						this.buttonlist[i].MouseHoverColor = this.tab_mouseHvrColor;
						this.buttonlist[i].BXBackColor = this.un_sel_tab_backcolor;
						this.buttonlist[i].MouseClickColor1 = this.tab_mouseClkColor;
					}
				}
			}
		}

		// Token: 0x060000B7 RID: 183 RVA: 0x00003B94 File Offset: 0x00003B94
		private void ToolStripDropDownButton1_DropDownOpening(object sender, EventArgs e)
		{
		}

		// Token: 0x060000B8 RID: 184 RVA: 0x00010DD4 File Offset: 0x00010DD4
		private void BackToFront_SelButton()
		{
			this.TabButtonPanel.Controls.Clear();
			this.btstrlist.Clear();
			for (int i = 0; i < this.buttonlist.Count; i++)
			{
				this.btstrlist.Add(this.buttonlist[i].Text);
			}
			this.buttonlist.Clear();
			for (int j = 0; j < this.btstrlist.Count; j++)
			{
				if (j == 0)
				{
					ButtonX buttonX = new ButtonX();
					buttonX.DisplayText = this.btstrlist[j];
					buttonX.Text = this.btstrlist[j];
					buttonX.Size = this.tab_size;
					buttonX.Location = new Point(0, 0);
					buttonX.ForeColor = this.sel_tab_forecolor;
					buttonX.BXBackColor = this.sel_tab_backcolor;
					buttonX.MouseHoverColor = this.sel_tab_backcolor;
					buttonX.MouseClickColor1 = this.sel_tab_backcolor;
					buttonX.ChangeColorMouseHC = false;
					buttonX.TextLocation_X = this.txt_x_loc;
					buttonX.TextLocation_Y = this.txt_y_loc;
					buttonX.Font = this.Font;
					buttonX.Click += this.button_Click;
					this.TabButtonPanel.Controls.Add(buttonX);
					this.buttonlist.Add(buttonX);
					this.selected_index++;
				}
				else if (j > 0)
				{
					ButtonX buttonX2 = new ButtonX();
					buttonX2.DisplayText = this.btstrlist[j];
					buttonX2.Text = this.btstrlist[j];
					buttonX2.Size = this.tab_size;
					buttonX2.ForeColor = this.sel_tab_forecolor;
					buttonX2.BXBackColor = this.sel_tab_backcolor;
					buttonX2.MouseHoverColor = this.sel_tab_backcolor;
					buttonX2.MouseClickColor1 = this.sel_tab_backcolor;
					buttonX2.ChangeColorMouseHC = false;
					buttonX2.TextLocation_X = this.txt_x_loc;
					buttonX2.TextLocation_Y = this.txt_y_loc;
					buttonX2.Font = this.Font;
					buttonX2.Click += this.button_Click;
					buttonX2.Location = new Point(this.buttonlist[j - 1].Size.Width + this.buttonlist[j - 1].Location.X, 0);
					this.TabButtonPanel.Controls.Add(buttonX2);
					this.buttonlist.Add(buttonX2);
					this.selected_index++;
				}
			}
			this.TabPanel.Controls.Clear();
		}

		// Token: 0x060000B9 RID: 185 RVA: 0x00011068 File Offset: 0x00011068
		private void tbr_Click(object sender, EventArgs e)
		{
			for (int i = 0; i < ((ToolStripMenuItem)sender).MergeIndex; i++)
			{
				int index = 0;
				for (int j = ((ToolStripMenuItem)sender).MergeIndex; j >= 0; j--)
				{
					ButtonX value = this.buttonlist[j];
					ButtonX value2 = this.buttonlist[index];
					this.buttonlist[j] = value2;
					this.buttonlist[index] = value;
					TabPanelControl value3 = this.tabPanelCtrlList[j];
					TabPanelControl value4 = this.tabPanelCtrlList[index];
					this.tabPanelCtrlList[j] = value4;
					this.tabPanelCtrlList[index] = value3;
				}
			}
			string text = ((ToolStripMenuItem)sender).Text;
			this.BackToFront_SelButton();
			this.selected_index = 0;
			this.TabPanel.Controls.Add(this.tabPanelCtrlList[this.buttonlist[0].TabIndex]);
			this.UpdateButtons();
		}

		// Token: 0x060000BA RID: 186 RVA: 0x00003B94 File Offset: 0x00003B94
		private void ToolStripDropDownButton1_Click(object sender, EventArgs e)
		{
		}

		// Token: 0x060000BB RID: 187 RVA: 0x00011164 File Offset: 0x00011164
		public void RemoveTab(int index)
		{
			if (index >= 0 && this.buttonlist.Count > 0 && index < this.buttonlist.Count)
			{
				this.buttonlist.RemoveAt(index);
				this.tabPanelCtrlList.RemoveAt(index);
				this.BackToFront_SelButton();
				if (this.buttonlist.Count > 1)
				{
					if (index - 1 >= 0)
					{
						this.TabPanel.Controls.Add(this.tabPanelCtrlList[index - 1]);
					}
					else
					{
						this.TabPanel.Controls.Add(this.tabPanelCtrlList[index - 1 + 1]);
						this.selected_index = index - 1 + 1;
					}
				}
				this.selected_index = index - 1;
				if (this.buttonlist.Count == 1)
				{
					this.TabPanel.Controls.Add(this.tabPanelCtrlList[0]);
					this.selected_index = 0;
				}
			}
			this.UpdateButtons();
		}

		// Token: 0x060000BC RID: 188 RVA: 0x00011257 File Offset: 0x00011257
		protected override void Dispose(bool disposing)
		{
			if (disposing && this.components != null)
			{
				this.components.Dispose();
			}
			base.Dispose(disposing);
		}

		// Token: 0x060000BD RID: 189 RVA: 0x00011278 File Offset: 0x00011278
		private void InitializeComponent()
		{
			this.BackTopPanel = new Panel();
			this.TabButtonPanel = new Panel();
			this.RibbonPanel = new Panel();
			this.TabPanel = new Panel();
			this.BackTopPanel.SuspendLayout();
			base.SuspendLayout();
			this.BackTopPanel.Controls.Add(this.TabButtonPanel);
			this.BackTopPanel.Dock = DockStyle.Top;
			this.BackTopPanel.Location = new Point(0, 0);
			this.BackTopPanel.Name = "BackTopPanel";
			this.BackTopPanel.Size = new Size(425, 30);
			this.BackTopPanel.TabIndex = 0;
			this.TabButtonPanel.Anchor = (AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right);
			this.TabButtonPanel.Location = new Point(0, 0);
			this.TabButtonPanel.Name = "TabButtonPanel";
			this.TabButtonPanel.Size = new Size(200, 25);
			this.TabButtonPanel.TabIndex = 0;
			this.RibbonPanel.Dock = DockStyle.Bottom;
			this.RibbonPanel.Location = new Point(0, 297);
			this.RibbonPanel.Name = "RibbonPanel";
			this.RibbonPanel.Size = new Size(425, 2);
			this.RibbonPanel.TabIndex = 0;
			this.TabPanel.Dock = DockStyle.Fill;
			this.TabPanel.Location = new Point(0, 30);
			this.TabPanel.Name = "TabPanel";
			this.TabPanel.Size = new Size(425, 267);
			this.TabPanel.TabIndex = 1;
			base.AutoScaleDimensions = new SizeF(6f, 13f);
			base.AutoScaleMode = AutoScaleMode.Font;
			base.Controls.Add(this.TabPanel);
			base.Controls.Add(this.RibbonPanel);
			base.Controls.Add(this.BackTopPanel);
			base.Name = "TabControlX";
			base.Size = new Size(425, 299);
			this.BackTopPanel.ResumeLayout(false);
			base.ResumeLayout(false);
		}

		// Token: 0x0400022D RID: 557
		private int selected_index = -1;

		// Token: 0x0400022E RID: 558
		public List<ButtonX> buttonlist = new List<ButtonX>();

		// Token: 0x0400022F RID: 559
		public List<TabPanelControl> tabPanelCtrlList = new List<TabPanelControl>();

		// Token: 0x04000230 RID: 560
		private Size tab_size = new Size(110, 25);

		// Token: 0x04000231 RID: 561
		private Color sel_tab_forecolor = Color.White;

		// Token: 0x04000232 RID: 562
		private Color unsel_tab_forecolor = Color.White;

		// Token: 0x04000233 RID: 563
		private Color sel_tab_backcolor = Color.FromArgb(20, 120, 240);

		// Token: 0x04000234 RID: 564
		private Color un_sel_tab_backcolor = Color.FromArgb(40, 40, 40);

		// Token: 0x04000235 RID: 565
		private Color tab_mouseHvrColor = Color.FromArgb(20, 120, 240);

		// Token: 0x04000236 RID: 566
		private Color tab_mouseClkColor = Color.FromArgb(20, 80, 200);

		// Token: 0x04000237 RID: 567
		private int txt_x_loc = 10;

		// Token: 0x04000238 RID: 568
		private int txt_y_loc = 5;

		// Token: 0x04000239 RID: 569
		private Color ribbon_Color = Color.FromArgb(20, 120, 240);

		// Token: 0x0400023A RID: 570
		private Color tabCtrlPanel_backcolor = Color.FromArgb(40, 40, 40);

		// Token: 0x0400023B RID: 571
		private Color tabCtrlButPanel_backcolor = Color.FromArgb(30, 30, 30);

		// Token: 0x0400023C RID: 572
		private List<string> btstrlist = new List<string>();

		// Token: 0x0400023D RID: 573
		private IContainer components;

		// Token: 0x0400023E RID: 574
		private Panel BackTopPanel;

		// Token: 0x0400023F RID: 575
		private Panel TabButtonPanel;

		// Token: 0x04000240 RID: 576
		private Panel RibbonPanel;

		// Token: 0x04000241 RID: 577
		private Panel TabPanel;
	}
}
