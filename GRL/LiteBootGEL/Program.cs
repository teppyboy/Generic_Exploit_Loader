using System;
using System.Net;
using System.IO;
using System.Reflection;
using System.IO.Compression;
using System.Diagnostics;

namespace LiteBootGEL
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Title = "[GEL] LiteBootstrapper";
            Console.WriteLine("== [Generic Exploit Loader] LiteBootstrapper ==");
            FileInfo fileInfo = new FileInfo(Assembly.GetExecutingAssembly().Location);
            DateTime lastModified = fileInfo.LastWriteTime;
            Console.WriteLine("Build: " + lastModified.ToShortDateString().Replace("/", ""));
            Console.WriteLine("Build date: " + lastModified.ToString());
            Console.WriteLine("Begin to fetch GEL [DEBUG] from GitHub...");
            Downloader();
            Console.WriteLine("Begin to extract Monaco...");
            Extract();
            Console.WriteLine("Launching GEL, goodbye.");
            var p = new Process();
            p.StartInfo.FileName = "GRL_V2_GUI.exe";
            p.StartInfo.Arguments = "-Cleanup";
            p.Start();
            Environment.Exit(0);
        }

        static void Downloader()
        {
            using (var client = new WebClient())
            {
                Console.WriteLine("Downloading Bunifu_UI_v1.5.3.dll");
                client.DownloadFile("https://github.com/teppyboy/Generic_Exploit_Loader/raw/master/GRL/GRL_V2_GUI/bin/Debug/Bunifu_UI_v1.5.3.dll", "Bunifu_UI_v1.5.3.dll");
                Console.WriteLine("Done!");
                Console.WriteLine("Downloading GRL_V2_GUI.exe");
                client.DownloadFile("https://github.com/teppyboy/Generic_Exploit_Loader/raw/master/GRL/GRL_V2_GUI/bin/Debug/GRL_V2_GUI.exe", "GRL_V2_GUI.exe");
                Console.WriteLine("Done!");
                Console.WriteLine("Downloading ScintillaNET.dll");
                client.DownloadFile("https://github.com/teppyboy/Generic_Exploit_Loader/raw/master/GRL/GRL_V2_GUI/bin/Debug/ScintillaNET.dll", "ScintillaNET.dll");
                Console.WriteLine("Done!");
                Console.WriteLine("Downloading Newtonsoft.Json.dll");
                client.DownloadFile("https://github.com/teppyboy/Generic_Exploit_Loader/raw/master/GRL/GRL_V2_GUI/bin/Debug/Newtonsoft.Json.dll", "Newtonsoft.Json.dll");
                Console.WriteLine("Done!");
                Console.WriteLine("Downloading Monaco.zip");
                client.DownloadFile("https://github.com/teppyboy/Generic_Exploit_Loader/raw/master/GRL/GRL_V2_GUI/bin/Debug/Monaco.zip", "Monaco.zip");
                Console.WriteLine("Done!");
            }
        }

        static void Extract()
        {
            try
            {

                DirectoryInfo di = new DirectoryInfo("Monaco");
                foreach (FileInfo file in di.EnumerateFiles())
                {
                    file.Delete();
                }
                foreach (DirectoryInfo dir in di.EnumerateDirectories())
                {
                    dir.Delete(true);
                }
                Directory.Delete("Monaco");

            }
            catch
            {

            }
            string zipPath = @"Monaco.zip";
            string extractPath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            ZipFile.ExtractToDirectory(zipPath, extractPath);
            File.Delete("Monaco.zip");
            Console.WriteLine("Done!");
        }
    }
}
