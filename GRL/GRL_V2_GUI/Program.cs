using System;
using System.Reflection;
using System.Windows.Forms;
using System.IO;
using System.Runtime.InteropServices;
using System.Diagnostics;

namespace GRL_V2_GUI
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [DllImport("kernel32.dll")]
        public static extern IntPtr GetConsoleWindow();

        [DllImport("user32.dll")]
        public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

        public const int SW_HIDE = 0;
        public const int SW_SHOW = 5;
        [STAThread]
        public static void Main(string[] args)
        {
            var handle = GetConsoleWindow();
            if (args == null || args.Length == 0)
            {
                ShowWindow(handle, SW_HIDE);
                DefaultForm.isConsoleVisible = false;
            }
            else
            {
                if (args[0] != "-EnableDebug")
                {
                    ShowWindow(handle, SW_HIDE);
                    DefaultForm.isConsoleVisible = false;
                }
                else if (args[0] == "-Cleanup")
                {
                    ShowWindow(handle, SW_HIDE);
                    Console.WriteLine("-Cleanup detected, cleaning up LiteBootstrapper");
                    File.Delete("LiteBootstrapper.exe");
                    Console.WriteLine("Done.");
                }
                else DefaultForm.isConsoleVisible = true;
            }
            Application.SetCompatibleTextRenderingDefault(false);
            FileInfo fileInfo = new FileInfo(Assembly.GetExecutingAssembly().Location);
            DateTime lastModified = fileInfo.LastWriteTime;
            Console.Title = "[GEL] Bootstrapper";
            Console.WriteLine("[Generic Exploit Loader] Bootstrapper");
            Console.WriteLine("Build: " + lastModified.ToShortDateString().Replace("/",""));
            Console.WriteLine("Build date: " + lastModified.ToString());
            Console.WriteLine("======================================");
            Console.WriteLine("Checking for required DLL...");
            Console.Write("ScintillaNET.dll - ");
            if (File.Exists("ScintillaNET.dll"))
            {
                Console.Write("FOUND");
                Console.Write("\nBunifu_UI_v1.5.3.dll - ");
                if (File.Exists("Bunifu_UI_v1.5.3.dll"))
                {
                    Console.Write("FOUND");
                    Console.Write("\nMonaco directory - ");
                    if (Directory.Exists("Monaco"))
                    {
                        Console.Write("FOUND");
                        Application.EnableVisualStyles();
                        Console.WriteLine("\nEnabled Visual Styles");
                        Console.WriteLine("======================================");
                        Console.WriteLine("Begin is log from UI.");
                        Application.Run(new DefaultForm());
                    }
                    else
                    {
                        NotFoundFunc();
                    }
                }
                else
                {
                    NotFoundFunc();
                }
            }
            else
            {
                NotFoundFunc();
            }
            Console.ReadKey();
            //Application.EnableVisualStyles(); // Disable Visual Styles
            //Application.Run(new MainForm());
        }
        private static void NotFoundFunc()
        {
            Console.Write("NOT FOUND");
            Console.WriteLine("\nA dll/directory was not found, Core Mode has been enabled.");
        }
    }
}
